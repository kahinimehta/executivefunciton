I"®*<h1 id="flywheel-sdk">Flywheel SDK</h1>
<h2 id="requirements">Requirements</h2>

<p>This upload requires:</p>

<ul>
  <li>A local installation of <a href="https://pennlinc.github.io/docs/Basics/python/">Python</a></li>
  <li><a href="https://pennlinc.github.io/docs/flywheel">Logging in</a> to Flywheel using the CLI</li>
  <li>A directory of files to upload to Flywheel</li>
  <li>A .tsv of SCANIDâ€™s and BBLIDâ€™s (optional)</li>
</ul>

<h2 id="getting-started">Getting started</h2>

<p>We will be uploading files using the <a href="https://flywheel-io.gitlab.io/product/backend/sdk/branches/master/python/getting_started.html">flywheel-SDK</a>. To get started, import necessary packages and log in using the CLI.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">glob</span>
<span class="kn">import</span> <span class="nn">flywheel</span>
<span class="n">fw</span> <span class="o">=</span> <span class="n">flywheel</span><span class="p">.</span><span class="n">Client</span><span class="p">()</span>
</code></pre></div></div>
<p>Set project using its name on flywheel</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">EFProj</span><span class="o">=</span><span class="n">fw</span><span class="p">.</span><span class="n">projects</span><span class="p">.</span><span class="n">find_first</span><span class="p">(</span><span class="s">'label=EFR01'</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">EFProj</span><span class="p">)</span>
</code></pre></div></div>

<p>Set your directory to location of files for upload and list out files.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">root_dir</span> <span class="o">=</span> <span class="s">'/Users/krmurtha/Box Sync/EXECUTIVE_FUNCTION/SCANNER_TASK/'</span>
<span class="n">bids_dir</span> <span class="o">=</span> <span class="s">'BIDS/test'</span>
<span class="n">all_files</span><span class="o">=</span><span class="n">glob</span><span class="p">.</span><span class="n">glob</span><span class="p">(</span><span class="n">root_dir</span> <span class="o">+</span> <span class="n">bids_dir</span> <span class="o">+</span> <span class="s">'*/*'</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="upload-to-session-level-of-flywheel">Upload to Session level of Flywheel</h2>

<p>To upload to the session or scan level (ie: BIDS files, .zip file of Variability Tasks), iterate through subjects and sessions to access session containers, then pick the corresponding file that matches the session label and upload.</p>

<p>In this example, we use the BIDS file name in a task file to match each .tsv with the appropriate session on flywheel.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">subjects</span><span class="o">=</span><span class="n">EFProj</span><span class="p">.</span><span class="n">subjects</span><span class="p">()</span> <span class="c1">#access all subjects in given project 
</span><span class="n">sessions</span><span class="o">=</span><span class="p">[]</span>
<span class="k">for</span> <span class="n">s</span> <span class="ow">in</span> <span class="n">subjects</span> <span class="p">:</span> <span class="c1">#loop through subs and access all sessions in a given project 
</span>    <span class="n">tempsessions</span><span class="o">=</span><span class="n">s</span><span class="p">.</span><span class="n">sessions</span><span class="p">()</span>
    <span class="n">sessions</span><span class="p">.</span><span class="n">extend</span><span class="p">(</span><span class="n">tempsessions</span><span class="p">)</span>

<span class="k">for</span> <span class="n">ses</span> <span class="ow">in</span> <span class="n">sessions</span><span class="p">:</span> <span class="c1">#loop through sessions and save scan id
</span>    <span class="n">scanid</span><span class="o">=</span><span class="n">ses</span><span class="p">.</span><span class="n">label</span>
    <span class="k">for</span> <span class="nb">file</span> <span class="ow">in</span> <span class="n">all_files</span><span class="p">:</span>
        <span class="n">f</span><span class="o">=</span><span class="nb">file</span><span class="p">.</span><span class="n">split</span><span class="p">(</span><span class="s">'/'</span><span class="p">)</span>
            <span class="n">g</span><span class="o">=</span><span class="p">(</span><span class="n">f</span><span class="p">[</span><span class="nb">len</span><span class="p">(</span><span class="n">f</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">]).</span><span class="n">split</span><span class="p">(</span><span class="s">'_'</span><span class="p">)</span>
            <span class="n">h</span><span class="o">=</span><span class="p">(</span><span class="n">g</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="n">split</span><span class="p">(</span><span class="s">'-'</span><span class="p">))[</span><span class="mi">1</span><span class="p">]</span>
            <span class="k">if</span> <span class="n">scanid</span> <span class="o">==</span> <span class="n">h</span><span class="p">:</span> <span class="c1">#match session id to scan id in the file to be uploaded:
</span>                <span class="k">print</span><span class="p">(</span><span class="s">"uploading {0} to {1}"</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="nb">file</span><span class="p">,</span> <span class="n">scanid</span><span class="p">))</span>
                <span class="n">ses</span><span class="p">.</span><span class="n">upload_file</span><span class="p">(</span><span class="nb">file</span><span class="p">)</span>
</code></pre></div></div>
<h2 id="upload-to-the-acquisition-level-of-flywheel">Upload to the Acquisition level of Flywheel</h2>

<p>To upload to the acquisition or sequence level (ie: raw .log files or PMU associated with a specific acquisition), iterate through sessions and acquisitions to select the acquisition label you are looking for, then pick the corresponding file that matches the session label and upload.</p>

<p>For this example, we use scanner task .log files that are uploaded directly to the fracback acquisition, using a .csv of scan idâ€™s and bbl idâ€™s from oracle.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="n">ids</span><span class="o">=</span><span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">'EFR01DataEntryTracke-Eft1scanID_DATA_2021-09-15_1520.csv'</span><span class="p">)</span>
<span class="n">id_dict</span><span class="o">=</span><span class="nb">dict</span><span class="p">(</span><span class="nb">zip</span><span class="p">(</span><span class="n">ids</span><span class="p">.</span><span class="n">bblid</span><span class="p">,</span> <span class="n">ids</span><span class="p">.</span><span class="n">scan_id_timepoint_1</span><span class="p">))</span>

<span class="k">for</span> <span class="n">ses</span> <span class="ow">in</span> <span class="n">sessions</span><span class="p">:</span> <span class="c1">#loop through sessions and save scan id
</span>        <span class="n">sesid</span><span class="o">=</span><span class="n">ses</span><span class="p">.</span><span class="n">label</span>
        <span class="n">acq</span><span class="o">=</span><span class="n">ses</span><span class="p">.</span><span class="n">acquisitions</span><span class="p">()</span>
        <span class="k">for</span> <span class="n">a</span> <span class="ow">in</span> <span class="n">acq</span><span class="p">:</span> <span class="c1">#loop through acquisitions for each session
</span>            <span class="n">EFFiles</span><span class="o">=</span><span class="n">a</span><span class="p">.</span><span class="n">files</span> <span class="c1">#access all files attatched to a session (ie: nifti, dicom)
</span>            <span class="n">EFTypes</span><span class="o">=</span><span class="p">[</span><span class="n">x</span><span class="p">.</span><span class="nb">type</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">EFFiles</span><span class="p">]</span> <span class="c1">#identify type of file
</span>            <span class="k">for</span> <span class="nb">file</span> <span class="ow">in</span> <span class="n">to_upload1</span><span class="p">:</span> 
                <span class="n">f</span><span class="o">=</span><span class="p">(</span><span class="nb">file</span><span class="p">.</span><span class="n">split</span><span class="p">(</span><span class="s">'/'</span><span class="p">))</span>
                <span class="n">bblid</span><span class="o">=</span><span class="n">f</span><span class="p">[</span><span class="nb">len</span><span class="p">(</span><span class="n">f</span><span class="p">)</span><span class="o">-</span><span class="mi">2</span><span class="p">]</span>
                <span class="n">scanid</span> <span class="o">=</span> <span class="n">id_dict</span><span class="p">[</span><span class="nb">int</span><span class="p">(</span><span class="n">bblid</span><span class="p">)]</span>
                <span class="c1">#search for correct label and file type in acquisition, and match session id to scan id in the file to be uploaded:
</span>                <span class="k">if</span> <span class="s">'ABCD_fMRI_frac-no-back-run1'</span> <span class="ow">in</span> <span class="n">a</span><span class="p">.</span><span class="n">label</span> <span class="ow">or</span> <span class="s">'func_task-fracnoback_run-02'</span> <span class="ow">in</span> <span class="n">a</span><span class="p">.</span><span class="n">label</span> <span class="ow">and</span> <span class="s">'nifti'</span> <span class="ow">in</span> <span class="n">EFTypes</span> <span class="ow">and</span> <span class="nb">int</span><span class="p">(</span><span class="n">sesid</span><span class="p">)</span> <span class="o">==</span> <span class="n">scanid</span><span class="p">:</span>
                    <span class="k">print</span><span class="p">(</span><span class="s">'uploading {0} to {1}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="nb">file</span><span class="p">,</span> <span class="n">scanid</span><span class="p">))</span>
                    <span class="n">a</span><span class="p">.</span><span class="n">upload_file</span><span class="p">(</span><span class="nb">file</span><span class="p">)</span>
</code></pre></div></div>
:ET